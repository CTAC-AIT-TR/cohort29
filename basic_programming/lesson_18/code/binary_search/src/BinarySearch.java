public class BinarySearch {
    public static void main(String[] args) {

       int[] array = {2,4,5,67,98};
        System.out.println(binarySearch(5,array));// вызов метода двоичного поиска
        System.out.println(binarySearch(456,array));// вызов метода двоичного поиска
    }

    // Двоичный поиск. Этот вид поиска требует предварительной сортировки данных.
    /*
    Алгоритм делит входной массив на равные половины и с каждым проходом цикла  сравнивает искомый элемент с
    элементом посередине. Поиск заканчивается если они равны. Иначе продолжаем искать элемент в той половине
     массива, в которой он может находиться и "отбросив" ненужную половину.  Эти действия повторяются пока элемент
     не будет найден или границы массива не сойдутся

     */ // index         0 1 2  3  4
        //int[] array = {2,4,5,67,98}; ищем 98
    static int binarySearch( int search, int[] array){

        int start = 0; // в переменной start  будет находиться индекс начала массива
        int end = array.length-1; // в переменной end  будет находиться индекс конца массива

        while(start <= end){ // условие окончания цикла

            int middle = (start + end )/2; //  определяем индекс середины массива

            if (search < array[middle]){ // если искомый элемент меньше элемента, стоящего посередине
                end = middle -1; // сдвигаем правую границу
            }

            if (search > array[middle]){
                start = middle +1; // если искомый элемент больше  элемента, стоящего посередине сдвигаем
                                    // левую границу
                }

            if (search == array[middle]) { // если искомый элемент = элементу посередине, то значит мы нашли его.
                return middle;             // программа заканчивается
            }

        }
        return  -1;
    }
}
